#ifndef DIAG
#define DIAG(ID, Level, Msg)
#endif

// Lexer errors
DIAG(err_unknown_token, Error, "Unknown token.")

// Parser errors
DIAG(err_expect_kw_var, Error, "Expected VAR.")
DIAG(err_expect_type, Error, "Expected type.")
DIAG(err_expect_var_name, Error, "Expected variable name.")
DIAG(err_expect_semicol, Error, "Expected semicolon.")
DIAG(err_expect_expr, Error, "Expected expression.")
DIAG(err_expect_stmt, Error, "Expected statement.")
DIAG(err_invalid_assign_target, Error, "Invalid assignment target.")
DIAG(err_expect_then, Error, "Expected THEN.")
DIAG(err_expect_closedpar, Error, "Expected ')'.")

// Semantic check errors
DIAG(err_var_redefine, Error, "Redefinition of an existing variable.")
DIAG(err_var_undefined, Error, "Undefined variable.")
DIAG(err_ret_val_undefined, Error, "Must have a return value.")
DIAG(err_no_return, Error, "Function must have a return statement.")
DIAG(err_incompatible_types, Error, "Incompatible types.")
DIAG(err_ret_type_mismatch, Error, "Mismatching return type.")
DIAG(err_cond_not_bool, Error, "Condition must be of boolean type.")

#undef DIAG
